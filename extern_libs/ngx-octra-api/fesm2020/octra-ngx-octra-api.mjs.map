{"version":3,"file":"octra-ngx-octra-api.mjs","sources":["../../../../libs/ngx-octra-api/src/lib/functions.ts","../../../../libs/ngx-octra-api/src/lib/octra-api.service.ts","../../../../libs/ngx-octra-api/src/lib/ngx-octra-api.module.ts","../../../../libs/ngx-octra-api/src/octra-ngx-octra-api.ts"],"sourcesContent":["export function removeProperties(obj: any, properties: string[]) {\n  if (obj) {\n    const keys = Object.keys(obj);\n    for (const property of properties) {\n      if (keys.find((a) => a === property)) {\n        delete obj[property];\n      }\n    }\n  }\n  return obj;\n}\n\nexport function removeNullAttributes<T>(obj: T): T {\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      obj[i] = removeNullAttributes(obj[i]);\n    }\n  } else {\n    if (typeof obj === 'object') {\n      const anyObj = obj as any;\n      const keys = Object.keys(anyObj);\n\n      for (const key of keys) {\n        if (anyObj[key] === null || anyObj[key] === undefined || anyObj[key].toString() === 'NaN') {\n          delete anyObj[key];\n        } else if (typeof anyObj[key] === 'object') {\n          anyObj[key] = removeNullAttributes([anyObj[key]])[0];\n        }\n      }\n      return anyObj as T;\n    }\n  }\n  return obj;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpContext, HttpEvent, HttpHeaders, HttpParams } from '@angular/common/http';\nimport {\n  AccountBatchActionDto,\n  AccountChangeDto,\n  AccountCreateRequestDto,\n  AccountDto,\n  AccountFieldValueDefinitionDto,\n  AccountLoginMethod,\n  AccountMinimalDto,\n  AccountSearchResultDto,\n  AccountSettingsDto,\n  AllStatisticsDto,\n  AppTokenChangeDto,\n  AppTokenCreateDto,\n  AppTokenDto,\n  AuthDto,\n  ChangeAccountInformationDto,\n  CurrentAccountDto,\n  PolicyCreateRequestDto,\n  PolicyCreateTranslationDto,\n  PolicyDto,\n  PolicyMinimalDto,\n  PolicyPublishRequestDto,\n  PolicyTranslationDto,\n  ProjectDto,\n  ProjectRequestDto,\n  ProjectRoleDto,\n  ProjectRoleResultDto,\n  ProjectStatisticsDto,\n  ProjectTempFileEntryDto,\n  ResetPasswordRequestDto,\n  RoleCreateDto,\n  RoleDto,\n  TaskBatchSessionDto,\n  TaskDto,\n  TaskProperties,\n  TaskSaveDtoProperties,\n  TaskStartActionDto,\n  ToolChangeRequestDto,\n  ToolConfigurationChangeDto,\n  ToolConfigurationCreateDto,\n  ToolConfigurationDto,\n  ToolDto,\n} from '@octra/api-types';\nimport { exhaustMap, map, Observable, of, throwError } from 'rxjs';\nimport { removeNullAttributes } from './functions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OctraAPIService {\n  get apiURL(): string {\n    return this._apiURL;\n  }\n\n  get authType(): AccountLoginMethod | undefined {\n    return this._authType;\n  }\n\n  get authenticated(): boolean {\n    return this._authenticated;\n  }\n\n  set webToken(value: string | undefined) {\n    this._webToken = value;\n  }\n\n  private appToken = '';\n  private useCookieStrategy = false;\n  private _webToken?: string = '';\n  private _apiURL = '';\n\n  get initialized(): boolean {\n    return this._initialized;\n  }\n\n  private _initialized = false;\n  private _authenticated = false;\n  private _authType?: AccountLoginMethod;\n\n  constructor(private http: HttpClient) {}\n\n  public init(apiURL: string, appToken: string, webToken: string | undefined, useCookieStrategy: boolean) {\n    this._apiURL = apiURL;\n    this.appToken = appToken;\n    this.useCookieStrategy = useCookieStrategy;\n    this._authenticated = this.getCookie('ocb_authenticated') !== undefined;\n    this._authType = this.getCookie('ocb_authenticated') as AccountLoginMethod;\n    this._webToken = webToken;\n    this._initialized = true;\n  }\n\n  public login(type: AccountLoginMethod, usernameOrEmail?: string, password?: string): Observable<AuthDto> {\n    let data: any = {\n      type,\n      usernameOrEmail,\n      password,\n      useCookies: this.useCookieStrategy,\n    };\n    data = removeNullAttributes(data);\n    return this.http\n      .post<any>(`${this._apiURL}/auth/login`, data, {\n        headers: this.getHeaders(false),\n      })\n      .pipe(\n        exhaustMap((dto: AuthDto) => {\n          if (!dto.openURL && dto.accessToken) {\n            if (!this.useCookieStrategy) {\n              this._webToken = dto.accessToken;\n            }\n            this._authenticated = true;\n            return of(dto);\n          } else if (dto.openURL && dto.openURL.trim() !== '') {\n            return of(dto);\n          }\n          return throwError(() => new Error(\"Can't read login response\"));\n        })\n      );\n  }\n\n  /**\n   * does logout process\n   */\n  public logout() {\n    return this.post(`/auth/logout`, undefined, true);\n  }\n\n  /***\n   * lists the app tokens.\n   */\n  public listAppTokens(): Observable<AppTokenDto[]> {\n    return this.get('/app/tokens', true);\n  }\n\n  /***\n   * returns one specific apptoken.\n   */\n  public getAppToken(id: string): Observable<AppTokenDto> {\n    return this.get(`/app/tokens/${id}`, true);\n  }\n\n  public getTask(projectID: string, taskID: string): Observable<TaskDto> {\n    return this.get(`/projects/${projectID}/tasks/${taskID}`, true);\n  }\n\n  public listTasks(projectID: string, order?: 'desc' | 'asc', start?: number, length?: number): Observable<TaskDto[]> {\n    const query: string[] = [];\n    if (order) {\n      query.push(`order=${order}`);\n    }\n    if (start) {\n      query.push(`start=${start}`);\n    }\n    if (length) {\n      query.push(`length=${length}`);\n    }\n\n    const queryString = query.length > 0 ? `?${query.join('&')}` : '';\n\n    return this.get(`/projects/${projectID}/tasks${queryString}`, true);\n  }\n\n  public listToolConfigurations(projectID: string): Observable<ToolConfigurationDto[]> {\n    return this.get(`/projects/${projectID}/configurations`, true);\n  }\n\n  public changeToolConfiguration(projectId: string, configId: string, dto: ToolConfigurationChangeDto): Observable<ToolConfigurationDto> {\n    return this.put(`/projects/${projectId}/configurations/${configId}`, dto, true);\n  }\n\n  public deleteToolConfiguration(projectId: string, configId: string): Observable<void> {\n    return this.del(`/projects/${projectId}/configurations/${configId}`, true);\n  }\n\n  public createToolConfiguration(projectId: string, dto: ToolConfigurationCreateDto): Observable<ToolConfigurationDto> {\n    return this.post(`/projects/${projectId}/configurations`, dto, true);\n  }\n\n  public removeAppToken(id: string): Observable<void> {\n    return this.del(`/app/tokens/${id}`, true);\n  }\n\n  public getProject(id: string): Observable<ProjectDto> {\n    return this.get(`/projects/${id}`, true);\n  }\n\n  public listAccounts(): Observable<AccountMinimalDto[]> {\n    return this.get('/accounts/', true);\n  }\n\n  public listProjects(manageable: boolean = false): Observable<ProjectDto[]> {\n    let query = '';\n    if (manageable) {\n      query = `?manageable=true`;\n    }\n    return this.get(`/projects${query}`, true);\n  }\n\n  public listTools(): Observable<ToolDto[]> {\n    return this.get(`/app/tools/`, true);\n  }\n\n  public getTool(id: string): Observable<ToolDto> {\n    return this.get(`/app/tools/${id}`, true);\n  }\n\n  public installTool(folder: string): Observable<ToolDto> {\n    return this.post(`/app/tools/folders/${folder}`, undefined, true);\n  }\n\n  public changeTool(id: string, dto: ToolChangeRequestDto): Observable<ToolDto> {\n    return this.put(`/app/tools/${id}`, dto, true);\n  }\n\n  public removeTool(id: string): Observable<void> {\n    return this.del(`/app/tools/${id}`, true);\n  }\n\n  public listProjectRoles(projectID: string): Observable<ProjectRoleDto[]> {\n    return this.get<ProjectRoleDto[]>(`/projects/${projectID}/roles`, true);\n  }\n\n  public listProjectTempFiles(projectID: string, path: string = ''): Observable<ProjectTempFileEntryDto[]> {\n    return this.get<ProjectTempFileEntryDto[]>(`/projects/${projectID}/files/temp?path=${path}`, true);\n  }\n\n  public createProject(projectData: ProjectRequestDto): Observable<ProjectDto> {\n    return this.post(`/projects`, projectData, true);\n  }\n\n  /*\n    public async getGuidelines(id: string): Promise<GuidelinesDto[]> {\n    return this.get(`/projects/${id}/guidelines`, true);\n  }\n\n  public async saveGuidelines(projectID: string, requestData: GuidelinesDto[]): Promise<void> {\n    return this.put(`/projects/${projectID}/guidelines`, requestData, true);\n  }\n   */\n\n  public removeProject(\n    id: string,\n    reqData: {\n      removeProjectFiles?: boolean;\n    }\n  ): Observable<void> {\n    return this.del(`/projects/${id}/`, true, reqData);\n  }\n\n  public removeAccount(id: string): Observable<void> {\n    return this.del(`/accounts/${id}/`, true);\n  }\n\n  public changeMyPassword(oldPassword: string, newPassword: string): Observable<void> {\n    return this.put(\n      '/accounts/me/password',\n      {\n        oldPassword,\n        newPassword,\n      },\n      true\n    );\n  }\n\n  public getMyAccountInformation(): Observable<CurrentAccountDto> {\n    return this.get('/accounts/me', true);\n  }\n\n  public getMyAccountPersonalInformation(): Observable<AccountDto> {\n    return this.get('/accounts/me/personal-information', true);\n  }\n\n  public createLocalAccount(dto: AccountCreateRequestDto): Observable<AccountDto> {\n    return this.post(\n      '/accounts',\n      {\n        ...dto,\n      } as AccountCreateRequestDto,\n      true\n    );\n  }\n\n  public changeProject(id: string, requestData: ProjectRequestDto): Observable<void> {\n    return this.put(`/projects/${id}`, requestData, true);\n  }\n\n  public createAppToken(tokenData: AppTokenCreateDto): Observable<boolean> {\n    return this.post<any>(`/app/tokens`, tokenData, true);\n  }\n\n  public changeAppToken(id: string, tokenData: AppTokenChangeDto): Observable<AppTokenDto> {\n    return this.put(`/app/tokens/${id}`, tokenData, true);\n  }\n\n  public refreshAppToken(id: string): Observable<AppTokenDto> {\n    return this.put(`/app/tokens/${id}/refresh`, {}, true);\n  }\n\n  public getAllStatistics(): Observable<AllStatisticsDto> {\n    return this.get(`/statistics/all`, true);\n  }\n\n  public startTask(projectID: string, data: TaskStartActionDto): Observable<TaskDto> {\n    return this.put<TaskDto>(`/projects/${projectID}/tasks/start`, data, true);\n  }\n\n  /*\n\n  public async freeAnnotation(projectID: string, annotationID: number): Promise<any> {\n    return this.post(`/projects/${projectID}/annotations/${annotationID}/free`, {}, true);\n  }\n   */\n\n  public saveTask(projectID: string, taskID: string, properties: TaskSaveDtoProperties, outputs: File[] = []): Observable<TaskDto> {\n    const formData = new FormData();\n    formData.append('properties', JSON.stringify(properties));\n    for (const output of outputs) {\n      formData.append('outputs[]', output, output.name);\n    }\n\n    return this.put<TaskDto>(`/projects/${projectID}/tasks/${taskID}/save`, formData, true);\n  }\n\n  public freeTask(projectID: string, taskID: string) {\n    return this.put<TaskDto>(`/projects/${projectID}/tasks/${taskID}/free`, undefined, true);\n  }\n\n  public uploadTaskData(project_id: string, properties: TaskProperties, inputs: File[], outputs: File[] = []): Observable<HttpEvent<unknown>> {\n    const formData = new FormData();\n    for (const input of inputs) {\n      formData.append('inputs[]', input, input.name);\n    }\n    for (const output of outputs) {\n      formData.append('outputs[]', output, output.name);\n    }\n\n    formData.append('properties', JSON.stringify(properties));\n\n    return this.post<HttpEvent<unknown>>(`/projects/${project_id}/tasks`, formData, true, {\n      reportProgress: true,\n      observe: 'events' as any,\n    });\n  }\n\n  public uploadTaskArchive(project_id: string, files: File[]) {\n    const formData = new FormData();\n    if (files) {\n      for (const file of files) {\n        formData.append('files[]', file, file.name);\n      }\n    }\n\n    return this.post<HttpEvent<unknown>>(`/projects/${project_id}/tasks/upload/archive`, formData, true, {\n      reportProgress: true,\n      observe: 'events' as any,\n    });\n  }\n\n  public startBatchSession(project_id: string) {\n    return this.post<TaskBatchSessionDto>(`/projects/${project_id}/tasks/batch/start`, undefined, true);\n  }\n\n  public cancelBatchSession(project_id: string, session_id: string, session_timestamp: number) {\n    return this.del(`/projects/${project_id}/tasks/batch/cancel`, true, {\n      session_id,\n      session_timestamp,\n    });\n  }\n\n  public submitBatchSession(project_id: string, session_id: string, session_timestamp: number) {\n    return this.post<void>(\n      `/projects/${project_id}/tasks/batch/submit`,\n      {\n        session_id,\n        session_timestamp,\n      },\n      true\n    );\n  }\n\n  public addBatchUploadTaskData(\n    session_timestamp: number,\n    session_id: string,\n    project_id: string,\n    properties: TaskProperties,\n    inputs: File[],\n    outputs: File[] = []\n  ): Observable<HttpEvent<unknown>> {\n    const formData = new FormData();\n    formData.append('properties', JSON.stringify(properties));\n\n    for (const input of inputs) {\n      formData.append('inputs[]', input, input.name);\n    }\n\n    for (const output of outputs) {\n      formData.append('outputs[]', output, output.name);\n    }\n\n    formData.append('session_id', session_id);\n    formData.append('session_timestamp', session_timestamp.toString());\n\n    return this.post<HttpEvent<unknown>>(`/projects/${project_id}/tasks/batch/upload`, formData, true, {\n      reportProgress: true,\n      observe: 'events' as any,\n    });\n  }\n\n  public removeTask(project_id: string, task_id: string): Observable<void> {\n    return this.del(`/projects/${project_id}/tasks/${task_id}`, true);\n  }\n\n  public listMyAccountFields() {\n    return this.get<AccountFieldValueDefinitionDto[]>('/accounts/me/fields', true);\n  }\n\n  public getProjectStatistics(id: string) {\n    return this.get<ProjectStatisticsDto>(`/projects/${id}/statistics`, true);\n  }\n\n  public saveMyAccountFieldValues(data: Record<string, any>) {\n    return this.post<void>('/accounts/me/fields', data, true);\n  }\n\n  public saveMyAccountSettings(data: AccountSettingsDto) {\n    return this.put<void>('/accounts/me/settings', data, true);\n  }\n\n  public listRoles() {\n    return this.get<RoleDto[]>('/app/roles', true);\n  }\n\n  public getRole(id: string) {\n    return this.get<RoleDto>(`/app/roles/${id}`, true);\n  }\n\n  public requestPasswordReset(dto: ResetPasswordRequestDto) {\n    return this.post<any>(`/accounts/request-password-reset`, dto, false);\n  }\n\n  public runAccountBatchAction(dto: AccountBatchActionDto) {\n    return this.post<void>(`/accounts/batch/runAction`, dto, true);\n  }\n\n  public createRole(dto: RoleCreateDto) {\n    return this.post<RoleDto>(`/app/roles`, dto, true);\n  }\n\n  public changeRole(id: string, dto: RoleCreateDto) {\n    return this.put<RoleDto>(`/app/roles/${id}`, dto, true);\n  }\n\n  public removeRole(id: string) {\n    return this.del(`/app/roles/${id}`, true);\n  }\n\n  public searchAccounts(keyword: string): Observable<AccountSearchResultDto[]> {\n    return this.get<AccountSearchResultDto[]>('/accounts/search?keyword=' + keyword, true);\n  }\n\n  // TODO fix issue with project assign dto\n  public assignProjectRoles(project_id: string, dto: any[]): Observable<any[]> {\n    return this.post<any[]>(`/projects/${project_id}/roles`, dto, true);\n  }\n\n  public saveMyPersonalAccountInformation(data: ChangeAccountInformationDto) {\n    return this.put<void>('/accounts/me/personal-information', data, true);\n  }\n\n  public changeProjectRole(project_id: string, role_id: string, data: any) {\n    return this.put<ProjectRoleResultDto>(`/projects/${project_id}/roles/${role_id}`, data, true);\n  }\n\n  public removeProjectRole(project_id: string, account_id: string) {\n    return this.del(`/projects/${project_id}/roles/${account_id}`, true);\n  }\n\n  public getAccountInformation(id: string) {\n    return this.get<AccountDto>(`accounts/${id}`, true);\n  }\n\n  public saveAccountInformation(id: string, dto: AccountChangeDto) {\n    return this.put<AccountDto>(`accounts/${id}`, dto, true);\n  }\n\n  public listPolicies() {\n    return this.get<PolicyMinimalDto[]>(`app/policies`, true);\n  }\n\n  public createPolicy(dto: PolicyCreateRequestDto) {\n    return this.post<PolicyDto>(`app/policies`, dto, true);\n  }\n\n  public getPolicy(id: number) {\n    return this.get<PolicyDto>(`app/policies/${id}`, true);\n  }\n\n  public updatePolicy(id: number, dto: any) {\n    return this.put<PolicyDto>(`app/policies/${id}`, dto, true);\n  }\n\n  public createPolicyTranslation(policy_id: number, dto: PolicyCreateTranslationDto) {\n    const formData = new FormData();\n    if (dto.files) {\n      for (const input of dto.files) {\n        formData.append('files[]', input, input.name);\n      }\n    }\n    if (dto.url) {\n      formData.append('url', dto.url);\n    }\n\n    if (dto.text) {\n      formData.append('text', dto.text);\n    }\n\n    formData.append('locale', dto.locale);\n    return this.post<PolicyTranslationDto>(`/app/policies/${policy_id}/translations`, formData, true);\n  }\n\n  public changePolicyTranslation(policy_id: number, policy_translation_id: number, dto: PolicyCreateTranslationDto) {\n    const formData = new FormData();\n    if (dto.files) {\n      for (const input of dto.files) {\n        formData.append('files[]', input, input.name);\n      }\n    }\n    if (dto.url) {\n      formData.append('url', dto.url);\n    }\n\n    if (dto.text) {\n      formData.append('text', dto.text);\n    }\n\n    formData.append('locale', dto.locale);\n    return this.put<PolicyTranslationDto>(`/app/policies/${policy_id}/translations/${policy_translation_id}`, formData, true);\n  }\n\n  public removePolicy(policy_id: number) {\n    return this.del(`app/policies/${policy_id}`, true);\n  }\n\n  public publishPolicies(dto: PolicyPublishRequestDto) {\n    return this.put(`app/policies/publish`, dto, true);\n  }\n\n  public removePolicyTranslation(policy_id: number, translation_id: number) {\n    return this.del(`app/policies/${policy_id}/translations/${translation_id}`, true);\n  }\n\n  private get<T>(partURL: string, needsJWT: boolean): Observable<T> {\n    const headers = this.getHeaders(needsJWT);\n    partURL = partURL.indexOf('/') === 0 ? partURL.substring(1) : partURL;\n    return this.http.get<T>(`${this._apiURL}/${partURL}`, {\n      responseType: 'json',\n      headers,\n    });\n  }\n\n  private post<T>(\n    partURL: string,\n    data: any,\n    needsJWT: boolean,\n    options?: {\n      headers?:\n        | HttpHeaders\n        | {\n            [header: string]: string | string[];\n          };\n      context?: HttpContext;\n      observe?: 'body';\n      params?:\n        | HttpParams\n        | {\n            [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>;\n          };\n      reportProgress?: boolean;\n      responseType?: 'json';\n      withCredentials?: boolean;\n    }\n  ): Observable<T> {\n    const headers = this.getHeaders(needsJWT);\n    partURL = partURL.indexOf('/') === 0 ? partURL.substring(1) : partURL;\n    return this.http.post<T>(`${this._apiURL}/${partURL}`, data, {\n      ...options,\n      responseType: 'json',\n      headers,\n    });\n  }\n\n  private put<T>(partURL: string, data: any, needsJWT: boolean): Observable<T> {\n    const headers = this.getHeaders(needsJWT);\n    partURL = partURL.indexOf('/') === 0 ? partURL.substring(1) : partURL;\n    return this.http.put<T>(`${this._apiURL}/${partURL}`, data, {\n      responseType: 'json',\n      headers,\n    });\n  }\n\n  private del(partURL: string, needsJWT: boolean, data: any = undefined): Observable<void> {\n    const headers = this.getHeaders(needsJWT);\n    partURL = partURL.indexOf('/') === 0 ? partURL.substring(1) : partURL;\n    const options: any = {\n      responseType: 'json',\n      headers,\n      body: data,\n    };\n\n    if (!data) {\n      delete options.body;\n    }\n    return this.http.delete(`${this._apiURL}/${partURL}`, options).pipe(\n      map((a) => {\n        return;\n      })\n    );\n  }\n\n  private getHeaders(needsJWT: boolean) {\n    let headers: {\n      Authorization?: string;\n      'X-App-Token': string;\n    } = {\n      'X-App-Token': this.appToken,\n    };\n\n    if (needsJWT && !this.useCookieStrategy) {\n      headers = {\n        ...headers,\n        Authorization: `Bearer ${this._webToken}`,\n      };\n    }\n\n    return headers;\n  }\n\n  getCookie(cname: string): string | undefined {\n    const name = cname + '=';\n    const decodedCookie = decodeURIComponent(document.cookie);\n    const ca = decodedCookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return undefined;\n  }\n\n  prepareFileURL(fileURL: string) {\n    if (!this.useCookieStrategy) {\n      // append query params\n      return `${fileURL}?session_token=${this._webToken}`;\n    }\n    return fileURL;\n  }\n\n  postOnNewTab(partURL: string, data: any) {\n    partURL = partURL.indexOf('/') === 0 ? partURL.substring(1) : partURL;\n\n    const temporaryForm = document.createElement('form');\n    temporaryForm.setAttribute('id', 'temporaryForm');\n    temporaryForm.setAttribute('method', 'post');\n    temporaryForm.setAttribute('action', this._apiURL + `/${partURL}`);\n    temporaryForm.setAttribute('target', '_blank');\n\n    for (const key of Object.keys(data)) {\n      if (data[key] !== undefined && data[key] !== null) {\n        const hidden = document.createElement('input');\n        hidden.setAttribute('style', 'display:none');\n        hidden.setAttribute('type', 'hidden');\n        hidden.setAttribute('name', key);\n        hidden.value = data['' + key];\n\n        temporaryForm.appendChild(hidden);\n      }\n    }\n\n    document.body.appendChild(temporaryForm);\n    temporaryForm.submit();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OctraAPIService } from './octra-api.service';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [],\n  providers: [OctraAPIService],\n})\nexport class NgxOctraApiModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}